import os
import sys
import time
import random
import json
from typing import Callable, Optional

from playwright.sync_api import sync_playwright, Error as PlaywrightError

USER_AGENTS = ["Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0"]
AMPLITUDE_URL = 'https://app.amplitude.com/analytics/rn/session-replay/project/258068/search/amplitude_id%3D1247117195850?sessionReplayId=b04f4dad-3dea-4249-b9fe-78b689c822a5/1749812689447&sessionStartTime=1749812689447'

class RenderScreenshotCollector:
    def __init__(self, status_callback: Optional[Callable[[str, int], None]] = None):
        self.status_callback = status_callback
        self.cookies = self._load_cookies_from_secret_file()

    def _update_status(self, details: str, progress: int):
        if self.status_callback:
            self.status_callback(details, progress)
        print(f"[{progress}%] {details}")

    def _load_cookies_from_secret_file(self):
        secret_file_path = "/etc/secrets/cookies.json"
        if not os.path.exists(secret_file_path):
            self._update_status(f"–§–∞–π–ª cookies –Ω–µ –Ω–∞–π–¥–µ–Ω.", 2)
            return []
        try:
            with open(secret_file_path, 'r') as f:
                cookies = json.load(f)
            self._update_status(f"Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã ({len(cookies)} —à—Ç).", 2)
            return cookies
        except Exception as e:
            self._update_status(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è cookies: {e}", 2)
            return []

    def run(self):
        self._update_status("üöÄ –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–µ—Å—Å-—Ç–µ—Å—Ç–∞...", 0)
        
        with sync_playwright() as p:
            try:
                # –®–ê–ì 1: –ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä
                self._update_status("–®–ê–ì 1: –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...", 10)
                browser = p.firefox.launch(headless=True)
                context = browser.new_context(user_agent=random.choice(USER_AGENTS))
                if self.cookies:
                    context.add_cookies(self.cookies)
                page = context.new_page()
                self._update_status("‚úÖ –®–ê–ì 1 –ü–†–û–ô–î–ï–ù: –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω.", 33)
                time.sleep(5)

                # –®–ê–ì 2: –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                self._update_status("–®–ê–ì 2: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ google.com...", 40)
                page.goto("https://google.com", timeout=30000)
                self._update_status("‚úÖ –®–ê–ì 2 –ü–†–û–ô–î–ï–ù: Google.com –æ—Ç–∫—Ä—ã—Ç.", 66)
                time.sleep(5)

                # –®–ê–ì 3: –û—Ç–∫—Ä—ã—Ç—å Amplitude
                self._update_status("–®–ê–ì 3: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ Amplitude.com (—Å–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π —ç—Ç–∞–ø)...", 70)
                page.goto(AMPLITUDE_URL, timeout=90000, wait_until="domcontentloaded")
                self._update_status("‚úÖ –®–ê–ì 3 –ü–†–û–ô–î–ï–ù: Amplitude –æ—Ç–∫—Ä—ã—Ç –±–µ–∑ —Å–±–æ—è!", 95)
                
                browser.close()
                self._update_status("üèÅ –¢–ï–°–¢ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù! –û–∫—Ä—É–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –Ω–∞–≥—Ä—É–∑–∫–æ–π.", 100)
                return {"status": "TEST_SUCCESSFUL"}

            except Exception as e:
                self._update_status(f"‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù! –û—à–∏–±–∫–∞ –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ —à–∞–≥–æ–≤: {e}", 100)
                return {"status": "TEST_FAILED", "error": str(e)}
